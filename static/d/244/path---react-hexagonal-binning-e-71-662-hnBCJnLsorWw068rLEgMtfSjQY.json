{"data":{"site":{"siteMetadata":{"title":"Mesh Korea Makers Blog","description":"메쉬코리아에서 기술, 유저 경험 및 공간 디자인, 서비스 기획 등 물류플랫폼을 만들기 위한 과정에 대한 고민과 그 해결을 담은 블로그입니다."}},"markdownRemark":{"html":"<blockquote>\n<p>위치기반 데이터를 시각화 할때 기본 분포도 보다 더 좋은 방법은 없을까?</p>\n</blockquote>\n<p><a name=\"end-product\"></a></p>\n<h2 id=\"1-결과물\"><a href=\"#1-%EA%B2%B0%EA%B3%BC%EB%AC%BC\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 결과물</h2>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/18374131/2d32e36a-7685-11e6-9722-71217bc1b69d.gif\"></div>\n<p>육각통(Hexagonal Binning 또는 hexbin) 기법을 적용한 강남구 지역의 위치 데이터 분포도입니다. 육각통 안에 표시된 숫자는 그 통안에 존재하는 데이터 포인트의 수 입니다. 육각통의 짙고옅음으로 밀집도를 한 눈에 파악할 수 있습니다.</p>\n<ul>\n<li><a href=\"https://meshkorea.github.io/hexbin-demo/\">라이브 데모 페이지</a></li>\n<li><a href=\"https://github.com/meshkorea/hexbin-demo\">라이브 데모의 소스 코드</a></li>\n</ul>\n<p><a name=\"objective\"></a></p>\n<h2 id=\"2-포스트의-목적\"><a href=\"#2-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9D%98-%EB%AA%A9%EC%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 포스트의 목적</h2>\n<p>비즈니스 인텔리전스(Business Intelligence 또는 BI)란 원시 데이터를 수집하여 의미 있는 정보로 가공하여 사업적인 의사결정에 도움을 주는 시스템입니다.</p>\n<p>(주)메쉬코리아에서는 자사의 서비스인 ‘부탁해!’의 지역별 상점 영업 상태를 조금 더 직관적으로 보고 싶었습니다. 가장 간단한 방법은 영업 중인 상점의 위치를 지도 위에 마커로 표시하는것입니다. 하지만 이러한 단순한 분포도는 지도를 확대 축소할 때 정보를 인지하기가 어려운 문제가 있습니다. 그래서 육각통 기법을 이용해서 비즈니스 인텔리전스를 구현해 보기로 했습니다.</p>\n<p>이 포스트를 통해 우리 랩이 React, Google Maps, 그리고 D3를 이용해 비즈니스 인텔리전스를 구현한 경험을 나누고자 합니다. 이 포스트를 읽는 독자 여러분들의 경험치는 천차만별이라 생각합니다. React와 D3에 대한 숙련도의 차이를 무시하고, 최대한 간결하면서도 누락됨이 없이 데모코드 및 포스트를 작성했습니다. 읽고 이해하는데 다소 어려움이 있다면, 언제든 댓글로 질문을 남겨 주세요. 예를 들어 요즘 React 와 같이 많이 사용하는 상태 관리 라이브러리인 Redux는 사용하지 않습니다. 이 포스트 및 라이브 데모에는 필요없기 때문입니다.</p>\n<p>그리고 프로젝트 스캐폴딩(Scaffolding)을 위해 <a href=\"https://github.com/facebookincubator/create-react-app\"><code class=\"language-text\">create-react-app</code></a>이라는 React 프로젝트 스타터 킷을 이용했습니다. React 프로젝트 해 보신 분은 아시겠지만, webpack, babel, eslint 등등 진입장벽이 꽤 높습니다. 이 프로젝트에 적용한 스타터 킷을 이용하면 명령 한 줄(<code class=\"language-text\">$ create-react-app my-app &amp;&amp; cd my-app</code>)로 프로젝트 뼈대 구조를 빠르게 생성할 수 있습니다. 파워유저라면 <code class=\"language-text\">$ npm run eject</code> 명령을 이용하여 자신만의 보일러플레이트(Boilerplate)를 만들 수도 있습니다.</p>\n<p><a name=\"core-library\"></a></p>\n<h2 id=\"3-요리-재료-소개\"><a href=\"#3-%EC%9A%94%EB%A6%AC-%EC%9E%AC%EB%A3%8C-%EC%86%8C%EA%B0%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 요리 재료 소개</h2>\n<h3 id=\"31-react\"><a href=\"#31-react\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1. React</h3>\n<p><a href=\"https://facebook.github.io/react/\">React</a>는 페이스북에서 UI 개발을 위해 만들고 공개한 오픈소스 자바스크립트 라이브러리입니다. (주)메쉬코리아에서도 2016년 1월부터 프로젝트에 적용을 시작해 점진적으로 적용 범위를 확장해 나가고 있습니다. 8 개월 동안의 사용 경험을 요약하자면 ‘만족’입니다. 특히 컴포넌트를 이용한 설계 패러다임이 굉장히 만족스럽습니다. 또 우리 회사는 ES2015(ES6)도 적극 적용하고 있습니다.</p>\n<h3 id=\"32-google-maps\"><a href=\"#32-google-maps\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2. Google Maps</h3>\n<p>Google Maps 는 다들 아시죠? 위치 기반 서비스를 개발할 수 있는 API를 제공합니다. 우리는 <a href=\"https://developers.google.com/maps/documentation/javascript/\">Google Maps JavaScript API</a>를 React 컴포넌트화해 놓은 <a href=\"https://github.com/tomchentw/react-google-maps\">react-google-maps</a> (v4.11.0) 를 사용합니다.</p>\n<h3 id=\"33-d3\"><a href=\"#33-d3\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3. D3</h3>\n<p><a href=\"https://d3js.org/\">D3</a>는 컴퓨터 공학자이자 데이터 시각화 전문가인 마이크 보스톡(Mike Bostock)이 만든 오픈소스 라이브러리입니다. 미가공 데이터를 다루기에 유용한 함수과 쉬운 문법으로 가공된 데이터를 DOM 에 렌더링할수 있는 유틸리티 함수들을 제공합니다. 또, D3 4.0에서 컴포넌트별 모듈화를 채용해서 React 개발자들에게는 반가운 소식입니다. 이 포스트의 라이브 데모 프로젝트는 d3-hexbin, d3-scale, d3-interpolate 모듈들을 사용했습니다.</p>\n<blockquote>\n<p><img class=\"icon\" width=\"40\" src=\"https://cloud.githubusercontent.com/assets/16535279/17925023/3034ee66-6a26-11e6-9488-85be6a50901a.png\"></p></p>\n<p>React와 D3를 같이 사용할 때 DOM에 대한 접근을 주체를 결정해야 합니다. 만약 D3가 담당하게 되면 React 프로젝트에 조그만한 D3 영역이 생긴다고 볼 수 있습니다. D3를 내재하는 React 컴포넌트의 <code class=\"language-text\">shouldComponentUpdate</code> 생명 주기 훅(Lifecycle Hook)에서 항상 <code class=\"language-text\">false</code> 값을 반환하여 React의 DOM 접근을 무효화합니다. 그리고 <a href=\"https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\"><code class=\"language-text\">findDOMNode()</code></a>를 통해 컴포넌트의 DOM을 가져온 뒤 D3의 <code class=\"language-text\">enter()</code>, <code class=\"language-text\">update()</code>, <code class=\"language-text\">exit()</code> 함수를 이용하여 DOM을 조작합니다.</p>\n<p>반대로 React가 DOM에 접근하는 방법입니다. React의 강력한 DOM 제어 능력을 살리고 D3는 데이터 가공에만 사용하는 방법입니다. 이 프로젝트 및 (주)메쉬코리아가 사용하는 방법입니다. <code class=\"language-text\">&lt;svg&gt;</code> 태그를 포함한 대부분의 태그들을 <a href=\"https://facebook.github.io/react/docs/tags-and-attributes.html\">React (Virtual) DOM</a>으로 조작할 수 있습니다.</p>\n</blockquote>\n<p><a name=\"walkthrough\"></a></p>\n<h2 id=\"4-조리하기\"><a href=\"#4-%EC%A1%B0%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 조리하기</h2>\n<p>육각통 기법을 사용하는 방법을 소스코드를 보며 천천히 하나씩 짚어보겠습니다.</p>\n<ul>\n<li><a href=\"#walkthrough-01\">4.1. 육각통 기법이란?</a></li>\n<li><a href=\"#walkthrough-02\">4.2. 데이터</a></li>\n<li>\n<p><a href=\"#walkthrough-03\">4.3. 컴포넌트 구조</a></p>\n<ul>\n<li><a href=\"#walkthrough-0301\">4.3.1. App 컴포넌트</a></li>\n<li><a href=\"#walkthrough-0302\">4.3.2. GoogleMapLoader와 GoogleMap 컴포넌트</a></li>\n<li><a href=\"#walkthrough-0303\">4.3.3. Hexbin 컴포넌트</a></li>\n<li><a href=\"#walkthrough-0304\">4.3.4. Hexagon 컴포넌트</a></li>\n</ul>\n</li>\n</ul>\n<p><a name=\"walkthrough-01\"></a></p>\n<h3 id=\"41-육각통-기법이란\"><a href=\"#41-%EC%9C%A1%EA%B0%81%ED%86%B5-%EA%B8%B0%EB%B2%95%EC%9D%B4%EB%9E%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.1. 육각통 기법이란?</h3>\n<p>육각통 기법은 기본 분포도(distribution map)와 많이 다르지 않습니다.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17880029/8718303a-6931-11e6-8d1a-b331d3f78a87.png\"></div>\n<p class=\"image-caption\">&#xB370;&#xC774;&#xD130; &#xD3EC;&#xC778;&#xD2B8;&#xAC00; &#xD558;&#xB098;&#xC758; &#xC810;&#xC73C;&#xB85C; &#xD45C;&#xC2DC;&#xB429;&#xB2C8;&#xB2E4;.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17880030/87187c66-6931-11e6-805e-2a6201575515.png\"></div>\n<p class=\"image-caption\">&#xB370;&#xC774;&#xD130; &#xD3EC;&#xC778;&#xD2B8;&#xB4E4;&#xC744; &#xD2B9;&#xC815; &#xD06C;&#xAE30;&#xC758; &#xC721;&#xAC01;&#xD615; &#xC548;&#xC5D0; &#xB123;&#xB294; &#xAC83;&#xC744; &apos;&#xC721;&#xAC01;&#xD1B5; &#xAE30;&#xBC95;&apos;&#xC774;&#xB77C;&#xACE0; &#xD569;&#xB2C8;&#xB2E4;.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17885277/80bb9efe-6957-11e6-874f-c51e5b80a3e3.png\"></div>\n<p class=\"image-caption\"> &#xB370;&#xC774;&#xD130; &#xD3EC;&#xC778;&#xD2B8;&#xC758; &#xAC1C;&#xC218;&#xC5D0; &#xB530;&#xB77C; &#xADF8;&#xC5D0; &#xB9DE;&#xB294; &#xC0C9;&#xC0C1;&#xC744; &#xC801;&#xC6A9;&#xD569;&#xB2C8;&#xB2E4;.</p>\n<p><a name=\"walkthrough-02\"></a></p>\n<h3 id=\"42-데이터\"><a href=\"#42-%EB%8D%B0%EC%9D%B4%ED%84%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.2. 데이터</h3>\n<p>모든 시각화의 시작은 데이터입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 위치 데이터</span>\n<span class=\"token keyword\">const</span> singleLocation <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"lat\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">37.505434</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lng\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">127.026385</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>하나의 위치 데이터는(예: 어떤 상점의 위치) 위도와 경도를 가지고 있는 자바스크립트 객체입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 위치 데이터를 모아놓은 배열</span>\n<span class=\"token keyword\">const</span> multipleLocations <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string\">\"lat\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">37.505434</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lng\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">127.026385</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> <span class=\"token string\">\"lat\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">37.516167</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"lng\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">127.040858</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>라이브 데모 프로젝트에서는 위치 데이터를 <a href=\"https://github.com/meshkorea/hexbin-demo/blob/master/src/data/generated-data.json\">JSON 파일</a>로 사용합니다. <code class=\"language-text\">webpack</code>의 <code class=\"language-text\">json-loader</code>를 이용해서 데이터 파일을 프로젝트로 가져옵니다(<a href=\"https://github.com/meshkorea/hexbin-demo/blob/master/src/App.js#L8\">코드</a>). 실무 프로젝트에선 서버에서 비동기 방식으로 불러오겠죠?</p>\n<p><a name=\"walkthrough-03\"></a></p>\n<h3 id=\"43-컴포넌트-구조\"><a href=\"#43-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%EC%A1%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3. 컴포넌트 구조</h3>\n<p>이 프로젝트의 진입점인 <a href=\"https://github.com/meshkorea/hexbin-demo/blob/master/src/index.js\">index.js</a>는 최상위 컴포넌트인 <code class=\"language-text\">App</code> 컴포넌트를 불러옵니다(<a href=\"https://github.com/meshkorea/hexbin-demo/blob/master/src/index.js#L6-L9\">코드</a>).</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17917353/9fcda3b0-69f6-11e6-8bbd-23667efb9393.png\"></div>\n<p><a name=\"walkthrough-0301\"></a></p>\n<h4 id=\"431-app-컴포넌트\"><a href=\"#431-app-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3.1. App 컴포넌트</h4>\n<p><code class=\"language-text\">App</code> 컴포넌트부터 차례대로 살펴 보겠습니다. <code class=\"language-text\">App</code> 컴포넌트는 <code class=\"language-text\">react-google-map</code>에서 제공하는 <code class=\"language-text\">GoogleMapLoader</code> 컴포넌트를 임포트 합니다.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17917322/49a7eda6-69f6-11e6-8046-8135637e0a4a.png\"></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// src/App.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 코드 생략</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GoogleMapLoader<span class=\"token punctuation\">,</span> GoogleMap<span class=\"token punctuation\">,</span> Marker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-google-maps'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> fakeStoreLatLngData <span class=\"token keyword\">from</span> <span class=\"token string\">'./data/generated-data.json'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 코드 생략</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 코드 생략</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>GoogleMapLoader\n        <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">fakeStoreLatLngData</code>는 위치 데이터를 배열로 가지고 있는 <a href=\"https://github.com/meshkorea/hexbin-demo/blob/master/src/data/generated-data.json\"><code class=\"language-text\">generated-data.json</code></a> 파일을 <code class=\"language-text\">JSON.parse()</code> 를 통해 자바스크립트 배열로 가공해줍니다 (이 부분을 <code class=\"language-text\">webpack</code> 의 <code class=\"language-text\">json-loader</code> 가 합니다).</p>\n<p><a name=\"walkthrough-0302\"></a></p>\n<h4 id=\"432-googlemaploader와-googlemap-컴포넌트\"><a href=\"#432-googlemaploader%EC%99%80-googlemap-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3.2. GoogleMapLoader와 GoogleMap 컴포넌트</h4>\n<p><code class=\"language-text\">App</code> 컴포넌트에서 임포트된 <code class=\"language-text\">GoogleMapLoader</code> 컴포넌트와 <code class=\"language-text\">GoogleMap</code> 컴포넌트를 조금 더 자세히 살펴보겠습니다.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17917323/4b54a040-69f6-11e6-9c9d-13625c13947f.png\"></div>\n<p><code class=\"language-text\">GoogleMapLoader</code> 컴포넌트가 <code class=\"language-text\">GoogleMap</code> 컴포넌트를 사용할 수 있게 해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/App.js</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GoogleMapLoader<span class=\"token punctuation\">,</span> GoogleMap<span class=\"token punctuation\">,</span> Marker <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-google-maps'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 코드 생략</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">MAP_PIXEL_HEIGHT</span> <span class=\"token operator\">=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 코드 생략</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* 코드 생략 */</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GoogleMapLoader</span>\n        <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> libraries<span class=\"token punctuation\">:</span> <span class=\"token string\">'geometry,places,visualization'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">containerElement</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token constant\">MAP_PIXEL_HEIGHT</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">googleMapElement</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GoogleMap</span>\n            <span class=\"token attr-name\">defaultZoom</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">12</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">options</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> mapTypeControl<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">defaultCenter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> lat<span class=\"token punctuation\">:</span> <span class=\"token number\">37.518397</span><span class=\"token punctuation\">,</span> lng<span class=\"token punctuation\">:</span> <span class=\"token number\">126.978886</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/* 코드 생략 */</span> <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>GoogleMap</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">GoogleMapLoader</code>의 속성 값 중 <code class=\"language-text\">containerElement</code>는 Google Map을 렌더링할 컨테이너를 지정합니다. <code class=\"language-text\">div</code>를 하나 넣어주고 <code class=\"language-text\">height</code>를 위에서 정의한 <code class=\"language-text\">MAP_PIXEL_HEIGHT</code> 상수의 값으로로 지정합니다. <code class=\"language-text\">MAP_PIXEL_HEIGHT</code>는 나중에 zoom level에 따라 육각형의 크기를 재계산할 때 사용합니다.</p>\n<p><code class=\"language-text\">GoogleMap</code> 컴포넌트는 <code class=\"language-text\">GoogleMapLoader</code>의 <code class=\"language-text\">googleMapElement</code>라는 속성으로 마운트됩니다. <code class=\"language-text\">GoogleMap</code>의 속성 중에 <code class=\"language-text\">options</code>라는 속성이 있는데, 여기엔 <a href=\"https://developers.google.com/maps/documentation/javascript/reference#MapOptions\">Google Maps 설정 객체</a>를 넣어줍니다.</p>\n<blockquote>\n<img class=\"icon\" width=\"40\" src=\"https://cloud.githubusercontent.com/assets/16535279/17925023/3034ee66-6a26-11e6-9488-85be6a50901a.png\">\n<p>이 두 컴포넌트가 제대로 작동하기 위해서는 <code class=\"language-text\">index.html</code>에 다음 코드를 추가 해야 합니다.</p>\n</blockquote>\n<blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;script type=&quot;text/javascript&quot; src=&quot;https://maps.googleapis.com/maps/api/js?key=[API_KEY]&amp;libraries=geometry,drawing,places,visualization&quot;&gt;</code></pre></div>\n</script>\n<p><a href=\"https://developers.google.com/maps/documentation/javascript/get-api-key\">Google Maps API 키</a>를 <code class=\"language-text\">[API_KEY]</code> 자리 표시자에 넣어줍니다. 이 때 <code class=\"language-text\">google</code> 이라는 글로벌 변수가 선언됩니다. 이 라이브러리가 로드되어야 지도가 보입니다.</p>\n</blockquote>\n<p><code class=\"language-text\">GoogleMap</code> 컴포넌트의 자식 노드로 <code class=\"language-text\">react-google-maps</code>에서 제공하는 <code class=\"language-text\">Marker</code> 컴포넌트나 커스텀 오버레이를 쓸 수 있습니다. 예를들어 <code class=\"language-text\">Hexbin</code> 컴포넌트를 넣어주면 지도 위에 육각형을 표현할 수 있습니다. 참고로 <code class=\"language-text\">Hexbin</code> 컴포넌트도 <code class=\"language-text\">react-google-maps</code> 에서 제공하는 기본 <code class=\"language-text\">OverlayView</code>를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/App.js</span>\n\n<span class=\"token comment\">// 코드 생략</span>\n<span class=\"token keyword\">import</span> Hexbin <span class=\"token keyword\">from</span> <span class=\"token string\">'./Hexbin.js'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> fakeStoreLatLngData <span class=\"token keyword\">from</span> <span class=\"token string\">'./data/generated-data.json'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">MAP_PIXEL_HEIGHT</span> <span class=\"token operator\">=</span> <span class=\"token number\">600</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">HEX_PIXEL_RADIUS</span> <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 코드 생략</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* 코드 생략 */</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GoogleMapLoader</span>\n        <span class=\"token attr-name\">query</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> libraries<span class=\"token punctuation\">:</span> <span class=\"token string\">'geometry,places,visualization'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">containerElement</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n            <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'100%'</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token constant\">MAP_PIXEL_HEIGHT</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">/></span></span>\n        <span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">googleMapElement</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>GoogleMap</span>\n            <span class=\"token attr-name\">defaultZoom</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">12</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">options</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> mapTypeControl<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">defaultCenter</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> lat<span class=\"token punctuation\">:</span> <span class=\"token number\">37.518397</span><span class=\"token punctuation\">,</span> lng<span class=\"token punctuation\">:</span> <span class=\"token number\">126.978886</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Hexbin</span>\n              <span class=\"token attr-name\">hexPixelRadius</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">HEX_PIXEL_RADIUS</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">mapPixelHeight</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token constant\">MAP_PIXEL_HEIGHT</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">data</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fakeStoreLatLngData<span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">colorRange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgb(242, 117, 165)'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>GoogleMap</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Hexbin</code> 컴포넌트가 받는 속성 값은 총 네 가지입니다.</p>\n<ul>\n<li><code class=\"language-text\">hexPixelRadius</code>: 육각통의 반지름 픽셀 길이</li>\n<li><code class=\"language-text\">mapPixelHeight</code>: 지도가 들어있는 <code class=\"language-text\">div</code> 컨테이너의 높이</li>\n<li><code class=\"language-text\">data</code>: 위치 데이터 배열</li>\n<li><code class=\"language-text\">colorRange</code>: 상대적 밀집도를 표현할 색상 범위</li>\n</ul>\n<p><a name=\"walkthrough-0303\"></a></p>\n<h4 id=\"433-hexbin-컴포넌트\"><a href=\"#433-hexbin-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3.3. Hexbin 컴포넌트</h4>\n<p>이제 <code class=\"language-text\">Hexbin</code> 컴포넌트를 자세히 들여다 볼까요? <code class=\"language-text\">Hexbin</code> 컴포넌트는 위치 데이터 배열을 받아 육각통 기법으로 시각화합니다.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17917326/4e896714-69f6-11e6-8895-e7fe7ad44269.png\"></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// src/Hexbin.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> PropTypes <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> OverlayView <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-google-maps'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hexbin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'d3-hexbin'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> scaleLinear <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'d3-scale'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> interpolateLab <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'d3-interpolate'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> max <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'d3-array'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Hexagon <span class=\"token keyword\">from</span> <span class=\"token string\">'./Hexagon.js'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 코드 생략</span></code></pre></div>\n<p><code class=\"language-text\">Hexbin</code> 컴포넌트가 임포트하는 모듈들입니다. D3의 다양한 모듈 중에 필요한 모듈들만 임포트하고 있습니다. <code class=\"language-text\">OverlayView</code>는 <code class=\"language-text\">react-google-maps</code>에서 제공하는 컴포넌트인데, 지도 위에 커스텀 엘리먼트를 표현할 때 유용한 컴포넌트입니다.</p>\n<p>먼저 <code class=\"language-text\">Hexbin</code> 컴포넌트의 생성자(<code class=\"language-text\">constructor</code>)부분을 보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// src/Hexbin.js</span>\n\n<span class=\"token comment\">// 코드 생략</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hexbin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 함수에 컨텍스트 바인딩</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>calculateHexPointRadius <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>calculateHexPointRadius<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addProjectedPoint <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>addProjectedPoint<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleZoomChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleZoomChange<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleBoundsChange <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleBoundsChange<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>makeNewColorScale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>makeNewColorScale<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>makeNewHexagons <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>makeNewHexagons<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>makeNewHexbin <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>makeNewHexbin<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// keep a reference to the map instance</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapRef <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>mapHolderRef<span class=\"token punctuation\">.</span><span class=\"token function\">getMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// add zoom change event listener to map</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapDragendListener <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapRef<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dragend'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleBoundsChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapZoomListener <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapRef<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'zoom_changed'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleZoomChange<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// somehow getBounds() function needs a little loadtime</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> currentBounds<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapRef<span class=\"token punctuation\">.</span><span class=\"token function\">getBounds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> currentProjection<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapRef<span class=\"token punctuation\">.</span><span class=\"token function\">getProjection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// set initial state</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      currentZoom<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mapRef<span class=\"token punctuation\">.</span><span class=\"token function\">getZoom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 코드 생략</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Hexbin</code> 컴포넌트 함수를 모두 바인딩했습니다. 함수를 여기서 바인딩 해주는 이유는 이 <a href=\"https://medium.com/@housecor/react-binding-patterns-5-approaches-for-handling-this-92c651b5af56\">포스트</a>를 참고하세요. <code class=\"language-text\">this.mapRef</code>라는 변수에 속성 값으로 받은 <code class=\"language-text\">mapHolderRef</code>라는 객체의 <code class=\"language-text\">getMap()</code>이라는 함수를 실행하여  <code class=\"language-text\">GoogleMap</code> 컴포넌트의 지도 객체를 할당했습니다. <code class=\"language-text\">GoogleMap</code> 컴포넌트의 자식 컴포넌트는 모두 <code class=\"language-text\">mapHolderRef</code> 라는 속성을 자동으로 상속받습니다.</p>\n<p><code class=\"language-text\">this.mapRef</code>는 지도 객체에 이벤트 리스너를 추가하거나 지도의 zoom level, bounds, projection 등의 값에 접근하는 용도로 쓸 수 있습니다.</p>\n<p><code class=\"language-text\">this.mapRef</code>로 <code class=\"language-text\">GoogleMap</code> 지도 객체를 얻고, 바로 이 지도 객체에 다음 두 가지 이벤트 리스너를 추가합니다. <code class=\"language-text\">dragend</code>와 <code class=\"language-text\">zoom_changed</code> 이벤트인데요.</p>\n<ul>\n<li><code class=\"language-text\">dragend</code>: 사용자가 마우스로 지도 영역을 새로 정의하였을때 육각통들의 위치를 재정의하는 함수 <code class=\"language-text\">handleBoundsChange()</code></li>\n<li><code class=\"language-text\">zoom_changed</code>: 사용자가 zoom level을 바꾸었을때 거기에 따라서 육각통의 넓이를 새로 정의하고, 새로운 육각통들 안에다가 위치 데이터를 다시 계산하여 넣는 함수(지도에 보이지 않는 육각통은 그리지 않습니다) <code class=\"language-text\">handleZoomChange()</code></li>\n</ul>\n<p>다음으로 <code class=\"language-text\">Hexbin</code> 컴포넌트의 <code class=\"language-text\">state</code>를 정의합니다. <code class=\"language-text\">state</code>로 들어가는 변수는 세 가지 입니다. 이 <code class=\"language-text\">state</code> 변수들이 바뀔 때마다 <code class=\"language-text\">Hexbin</code> 컴포넌트는 다시 렌더링합니다.</p>\n<ul>\n<li><code class=\"language-text\">currentZoom</code></li>\n<li><code class=\"language-text\">currentBounds</code></li>\n<li><code class=\"language-text\">currentProjection</code></li>\n</ul>\n<p>여기서 조금 흥미로운 부분은 <code class=\"language-text\">this.mapRef.getBounds()</code>나 <code class=\"language-text\">this.mapRef.getProjection()</code>이 생성자에서 동기적으로 실행되지 않는다는 점입니다(실행하면 <code class=\"language-text\">undefined</code>를 반환합니다). 그래서 이 두 함수는 500 밀리 초(ms) 지연시켜(<code class=\"language-text\">setTimeout</code>) <code class=\"language-text\">setState</code> 함수를 호출해 초기화 해야 합니다.</p>\n<p>반면에 <code class=\"language-text\">this.mapRef.getZoom()</code>은 <code class=\"language-text\">this.state</code> 를 통해서 동기적으로 <code class=\"language-text\">state</code>의 <code class=\"language-text\">currentZoom</code> 변수를 초기화 해줍니다.</p>\n<p><code class=\"language-text\">Hexbin</code> 컴포넌트의 정확한 메커니즘은 컴포넌트의 <code class=\"language-text\">render()</code> 함수를 따라가보면 알 수 있습니다. 같이 따라가 볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/Hexbin.js</span>\n\n<span class=\"token comment\">// 코드 생략</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hexbin</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// 코드 생략</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> hexagons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> colorScale<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>currentProjection<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      hexagons <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeNewHexagons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      colorScale <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeNewColorScale</span><span class=\"token punctuation\">(</span>hexagons<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span>\n          hexagons\n            <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>hexagon <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>currentBounds<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token function\">pointToLatLng</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>currentProjection<span class=\"token punctuation\">,</span> hexagon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>hexagon <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>OverlayView</span>\n                  <span class=\"token attr-name\">mapHolderRef</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>mapHolderRef<span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">position</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">pointToLatLng</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>currentProjection<span class=\"token punctuation\">,</span> hexagon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">mapPaneName</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>OverlayView<span class=\"token punctuation\">.</span><span class=\"token constant\">OVERLAY_MOUSE_TARGET</span><span class=\"token punctuation\">}</span></span>\n                  <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>hexagon<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span>\n                <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Hexagon</span>\n                    <span class=\"token attr-name\">hexPixelRadius</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>hexPixelRadius<span class=\"token punctuation\">}</span></span>\n                    <span class=\"token attr-name\">fillColor</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">colorScale</span><span class=\"token punctuation\">(</span>hexagon<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n                    <span class=\"token attr-name\">content</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>hexagon<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">}</span></span>\n                  <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>OverlayView</span><span class=\"token punctuation\">></span></span>\n              <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">render()</code> 함수가 제일 먼저 만드는 변수는 <code class=\"language-text\">hexagons</code>와 <code class=\"language-text\">colorScale</code> 입니다.</p>\n<p> 먼저 <code class=\"language-text\">GoogleMap</code> 지도 객체가 준비된 상태에서(<code class=\"language-text\">this.state.currentProjection</code>이 셋팅된 상태) <code class=\"language-text\">hexagons</code> 변수는 <code class=\"language-text\">makeNewHexagons()</code>라는 컴포넌트 함수를 통해 만들어지는데요, <code class=\"language-text\">d3-hexbin</code>이 등장하기 시작합니다.</p>\n<p><code class=\"language-text\">makeNewHexagons()</code> 함수를 따라 가보도록 하겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// src/Hexbin.js</span>\n\n<span class=\"token comment\">// 코드 생략</span>\n\n<span class=\"token function\">makeNewHexagons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> hexagons<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// if data is unavailable, return an empty array</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// declare a new hexbin generator</span>\n  <span class=\"token keyword\">let</span> hexbinGenerator<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// make new hexbin according to new hexPointRadius</span>\n  <span class=\"token keyword\">const</span> hexPointRadiusNew <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">calculateHexPointRadius</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hexbinGenerator <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeNewHexbinGenerator</span><span class=\"token punctuation\">(</span>hexPointRadiusNew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// set x and y accessors</span>\n  hexbinGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=></span> d<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hexbinGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">=></span> d<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// calculate the hexagons</span>\n  hexagons <span class=\"token operator\">=</span> <span class=\"token function\">hexbinGenerator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>convertLatLngToPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> hexagons<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>hexagon<span class=\"token punctuation\">,</span> idx<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span> hexagon<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> idx<span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> hexagon <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// in order to give unique keys</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>먼저 속성 값을 통해 받아야 하는 위치 데이터가 존재하지 않으면 빈 배열을 반환합니다. 육각통을 만들수가 없겠죠?</p>\n<p>만약 데이터가 존재한다면 <code class=\"language-text\">hexbinGenerator</code> 라는 변수를 선언하는데요, 이 변수는 <code class=\"language-text\">hexbin</code> 배열을 만들어내는 제너레이터입니다.</p>\n<p>다음은 <code class=\"language-text\">d3-hexbin</code> 모듈을 사용하는 절차입니다.</p>\n<ol>\n<li><code class=\"language-text\">d3-hexbin</code> 의 <code class=\"language-text\">hexbin()</code>은 기본적으로 육각통 제너레이터를 반환합니다 (<code class=\"language-text\">const hexbinGenerator = hexbin()</code>).</li>\n<li>제너레이터는 <code class=\"language-text\">radius()</code> 함수를 통해 반환할 육각통의 반지름을 정합니다 (<code class=\"language-text\">hexbinGenerator.radius(RADIUS)</code>).</li>\n<li>제너레이터의 <code class=\"language-text\">x()</code>, <code class=\"language-text\">y()</code> 함수를 통해 넘겨줄 위치데이터의 <code class=\"language-text\">x</code> 와 <code class=\"language-text\">y</code> 값을 추출하는 함수를 넣어줍니다 (<code class=\"language-text\">hexbinGenerator.x(d =&gt; d.x)</code>).</li>\n<li>1 에서 생성한 <code class=\"language-text\">hexbinGenerator</code>에 위치 데이터 배열을 넘겨주면 (<code class=\"language-text\">hexbinGenerator(DATA)</code>), 육각통들의 배열을 계산해서 반환합니다.</li>\n</ol>\n<p>육각통 배열이라함은</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 1. 모든 육각통들을 나타내는 배열</span>\n<span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// 2. 하나의 육각통을 나타내는 배열</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// 3a. 하나의 육각통에 들어있는 하나의 위치 객체</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">218.22502328888885</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">99.17794119756525</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 3b. 같은 육각통에 들어있는 또다른 위치 객체</span>\n    <span class=\"token punctuation\">{</span>\n      x<span class=\"token punctuation\">:</span> <span class=\"token number\">218.22201528888885</span><span class=\"token punctuation\">,</span>\n      y<span class=\"token punctuation\">:</span> <span class=\"token number\">99.17285021805677</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>이고, 위에서 표현되진 않았지만 2. 배열은 <code class=\"language-text\">x</code> 와 <code class=\"language-text\">y</code> 속성을 가지는데 (자바스크립트 배열도 객체입니다), 바로 이 속성이 각 육각통 정중앙의 <code class=\"language-text\">x</code>, <code class=\"language-text\">y</code> 위치 입니다. 이 모든 정보들를 가지고 우리는 육각통들을 지도 위에 그릴 수 있습니다.</p>\n<p><code class=\"language-text\">d3-hexbin</code> 모듈에 대한 정확한 사용법은 <a href=\"https://github.com/d3/d3-hexbin\">공식 저장소</a>에서 확인 바랍니다.</p>\n<blockquote>\n<img class=\"icon\" width=\"40\" src=\"https://cloud.githubusercontent.com/assets/16535279/17925023/3034ee66-6a26-11e6-9488-85be6a50901a.png\">\n<p> 잠시만요, 갑자기 위치 데이터가 위도, 경도에서 x, y 로 바뀌지 않았나요?!</p>\n<p><code class=\"language-text\">d3-hexbin</code> 을 사용하기 위해서는 위치 데이터를 먼저 2차원 투영(2D Projection)해  주어야 합니다. 왜냐하면 위경도는 2D 좌표가 아니기 때문입니다.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/18377256/f362c332-76a0-11e6-86e9-6723ea125569.png\"></div>\n<p>Google Map API에서 제공하는 <code class=\"language-text\">Projection</code> 이라는 객체가 있는데, 이 객체는 구면좌표인 위경도를 2D 좌표(포인트 좌표)로 변환해주는 <code class=\"language-text\">fromLatLngToPoint()</code> 라는 함수와, 2D 좌표를 다시 위경도로 변환해주는 <code class=\"language-text\">fromPointToLatLng()</code>이라는 함수를 가지고 있습니다. <code class=\"language-text\">Hexbin</code> 컴포넌트에는 <code class=\"language-text\">currentProjection</code> 이라는 <code class=\"language-text\">state</code> 변수가 있는데, 바로 이 변수가 <code class=\"language-text\">Projection</code> 객체입니다.</p>\n<p>위에 <code class=\"language-text\">makeNewHexagons()</code> 함수에서 <code class=\"language-text\">hexbinGenerator</code>에다가 위치 데이터를 넘겨줄 때 위경도 데이터를 포인트 좌표로 <code class=\"language-text\">map</code> 해주는 것을 볼 수 있습니다(<code class=\"language-text\">hexagons = hexbinGenerator(this.props.data.map(this.convertLatLngToPoint));</code>).</p>\n</blockquote>\n<p>마지막으로 짚고 넘어가야할 부분이 <code class=\"language-text\">calculateHexPointRadius()</code> 인데요, 이 함수는 우리가 최상위 컴포넌트에서 정의한 <code class=\"language-text\">HEX_PIXEL_RADIUS</code>, 즉 육각통의 반지름 픽셀길이가 실제 2D 좌표에서 어떤 값이 되야하는지 계산하는 함수입니다. 어떤 zoom level 에서든지 보여지는 육각통의 픽셀넓이가 같으려면, zoom level 에 따라 그 육각통의 실제 차지하는 죄표상 위치적 넓이는 변화해야겠죠? 계산방법은 실제로 간단합니다. 보여지는 지도의 픽셀 높이와 <code class=\"language-text\">mapPixelHeight</code> 육각통의 픽셀 반지름 <code class=\"language-text\">hexPixelRadius</code> 의 비례가 포인트 좌표상의 높이와 포인트 좌표상의 육각통 반지름의 비례가 같아야하는 공식이 성립하면 됩니다.</p>\n<p><code class=\"language-text\">render()</code> 함수가 다음으로 만드는 변수는 <code class=\"language-text\">colorScale</code>이고, 육각통을 그릴때 필요한 색상을 계산하는 함수입니다. <code class=\"language-text\">makeNewColorScale()</code>함수는 <code class=\"language-text\">d3-hexbin</code> 으로 만든 육각통 배열을 넘겨주면 <code class=\"language-text\">d3-scale</code> 과 <code class=\"language-text\">d3-interpolate</code> 를 사용하여 각 육각통의 상대적 밀집도를 색상으로 표현할수 있는 스케일 함수를 반환합니다. 이제 육각통들을 그릴 준비가 끝났습니다. <code class=\"language-text\">react-google-maps</code> 가 제공하는 <code class=\"language-text\">OverlayView</code> 컴포넌트에 다음 소개할 <code class=\"language-text\">Hexagon</code>컴포넌트를 넣어줍니다. 여기서 <code class=\"language-text\">OverlayView</code> 컴포넌트의 <code class=\"language-text\">position</code> 속성은 위경도를 요구하기때문에 각 육각형통의 중앙포인트를 다시 위경도로 바꿔줍니다.</p>\n<p><a name=\"walkthrough-0304\"></a></p>\n<h4 id=\"434-hexagon-컴포넌트\"><a href=\"#434-hexagon-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.3.4. Hexagon 컴포넌트</h4>\n<p><code class=\"language-text\">Hexagon</code> 컴포넌트는 프리젠테이션 컴포넌트입니다. <code class=\"language-text\">Hexbin</code> 컴포넌트에서 육각통을 그릴 때 사용하는 컴포넌트입니다.</p>\n<div class=\"image-wrapper\"><img src=\"https://cloud.githubusercontent.com/assets/16535279/17917330/51f43104-69f6-11e6-9720-e81dc9a63cd3.png\"></div>\n<p><code class=\"language-text\">d3-hexbin</code>이 제공하는 함수 중에 반지름을 넣어주면 그 크기의 육각형 데이터(Path)을 반환하는 함수가 있습니다. 이 데이터를 Svg의 <code class=\"language-text\">&lt;path&gt;</code> 엘리먼트로 넘겨줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// src/Hexagon.js</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> PropTypes<span class=\"token punctuation\">,</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hexbin <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'d3-hexbin'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Hexagon</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> hexPixelRadius<span class=\"token punctuation\">,</span> fillColor<span class=\"token punctuation\">,</span> content <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> hexWidth <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>hexPixelRadius <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token constant\">PI</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> hexHeight <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>hexPixelRadius <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> hexWidth<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> hexHeight<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">:</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span> hexHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span> hexWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>svg</span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> position<span class=\"token punctuation\">:</span> <span class=\"token string\">'relative'</span><span class=\"token punctuation\">,</span> overflow<span class=\"token punctuation\">:</span> <span class=\"token string\">'visible'</span><span class=\"token punctuation\">,</span> zIndex<span class=\"token punctuation\">:</span> <span class=\"token number\">99</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">width</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>hexWidth<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">height</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>hexHeight<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>path</span>\n            <span class=\"token attr-name\">stroke</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">strokeWidth</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">d</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">hexbin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hexagon</span><span class=\"token punctuation\">(</span>hexPixelRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">fill</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>fillColor<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">opacity</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">0.6</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">transform</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token template-string\"><span class=\"token string\">`translate(</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hexWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hexHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)`</span></span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>path</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>svg</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> color<span class=\"token punctuation\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> fontSize<span class=\"token punctuation\">:</span> <span class=\"token string\">'1.5em'</span><span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> textAlign<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> hexWidth<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> hexHeight<span class=\"token punctuation\">,</span> zIndex<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> borderRadius<span class=\"token punctuation\">:</span> <span class=\"token string\">'1em'</span><span class=\"token punctuation\">,</span> backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span> lineHeight<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>hexHeight<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">px`</span></span><span class=\"token punctuation\">,</span> padding<span class=\"token punctuation\">:</span> <span class=\"token string\">'.5em'</span><span class=\"token punctuation\">,</span> opacity<span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span> content <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nHexagon<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  hexPixelRadius<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span>\n  fillColor<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">,</span>\n  content<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>any<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Hexagon<span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">Hexagon</code> 컴포넌트의 소스 코드는 간단합니다. 그릴 육각통의 픽셀 반지름 길이와, 색상, 그리고 안에 들어갈 숫자는 모두 속성으로 <code class=\"language-text\">Hexbin</code> 컴포넌트에게로 부터 내려 받습니다. 여기서 <code class=\"language-text\">top</code>, <code class=\"language-text\">left</code> 또는,<code class=\"language-text\">transform</code> 을 이용하여 그래픽을 오프셋 하는 이유는 다음 그림이 더 쉽게 설명할수있을것 같습니다.</p>\n<div class=\"image-wrapper\"><img src=\"/content/images/2016/09/transform.png\"/></div>\n<p><a name=\"closing\"></a></p>\n<h2 id=\"5-마치며\"><a href=\"#5-%EB%A7%88%EC%B9%98%EB%A9%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 마치며</h2>\n<p>ES2015 문법과 React 코드가 낯설지 않다면, 라이브 데모 소스 코드를 이해하시는데 큰 무리는 없을 겁니다. <a href=\"#walkthrough\">4. 조리하기</a> 섹션을 참고하면서 스스로 소스 코드를 읽어 보실 것을 권장합니다. 긴 글 읽어주셔서 고맙습니다.</p>\n<p><a name=\"license\"></a></p>\n<h2 id=\"6-license\"><a href=\"#6-license\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. License</h2>\n<ul>\n<li>MIT License</li>\n<li>Sample JSON data created with <a href=\"http://www.json-generator.com\">JSON GENERATOR</a></li>\n</ul>\n<p><img class=\"icon\" width=\"30\" style=\"float: left; margin-right: 10px\" src=\"https://cloud.githubusercontent.com/assets/16535279/17925023/3034ee66-6a26-11e6-9488-85be6a50901a.png\">Icon made by <a href=\"http://www.flaticon.com/authors/roundicons\">Roundicons</a> from <a href=\"http://www.flaticon.com\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\">CC 3.0 BY</a></p>","excerpt":"위치기반 데이터를 시각화 할때 기본 분포도 보다 더 좋은 방법은 없을까? 1. 결과물 육각통(Hexagonal Binning 또는 hexbin…","tableOfContents":"<ul>\n<li><a href=\"/react-hexagonal-binning/#1-%EA%B2%B0%EA%B3%BC%EB%AC%BC\">1. 결과물</a></li>\n<li><a href=\"/react-hexagonal-binning/#2-%ED%8F%AC%EC%8A%A4%ED%8A%B8%EC%9D%98-%EB%AA%A9%EC%A0%81\">2. 포스트의 목적</a></li>\n<li>\n<p><a href=\"/react-hexagonal-binning/#3-%EC%9A%94%EB%A6%AC-%EC%9E%AC%EB%A3%8C-%EC%86%8C%EA%B0%9C\">3. 요리 재료 소개</a></p>\n<ul>\n<li><a href=\"/react-hexagonal-binning/#31-react\">3.1. React</a></li>\n<li><a href=\"/react-hexagonal-binning/#32-google-maps\">3.2. Google Maps</a></li>\n<li><a href=\"/react-hexagonal-binning/#33-d3\">3.3. D3</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/react-hexagonal-binning/#4-%EC%A1%B0%EB%A6%AC%ED%95%98%EA%B8%B0\">4. 조리하기</a></p>\n<ul>\n<li><a href=\"/react-hexagonal-binning/#41-%EC%9C%A1%EA%B0%81%ED%86%B5-%EA%B8%B0%EB%B2%95%EC%9D%B4%EB%9E%80\">4.1. 육각통 기법이란?</a></li>\n<li><a href=\"/react-hexagonal-binning/#42-%EB%8D%B0%EC%9D%B4%ED%84%B0\">4.2. 데이터</a></li>\n<li>\n<p><a href=\"/react-hexagonal-binning/#43-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EA%B5%AC%EC%A1%B0\">4.3. 컴포넌트 구조</a></p>\n<ul>\n<li><a href=\"/react-hexagonal-binning/#431-app-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\">4.3.1. App 컴포넌트</a></li>\n<li><a href=\"/react-hexagonal-binning/#432-googlemaploader%EC%99%80-googlemap-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\">4.3.2. GoogleMapLoader와 GoogleMap 컴포넌트</a></li>\n<li><a href=\"/react-hexagonal-binning/#433-hexbin-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\">4.3.3. Hexbin 컴포넌트</a></li>\n<li><a href=\"/react-hexagonal-binning/#434-hexagon-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8\">4.3.4. Hexagon 컴포넌트</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/react-hexagonal-binning/#5-%EB%A7%88%EC%B9%98%EB%A9%B0\">5. 마치며</a></li>\n<li><a href=\"/react-hexagonal-binning/#6-license\">6. License</a></li>\n</ul>","frontmatter":{"author":{"id":"윤현규","name":"윤현규","bio":"솔루션개발팀에서 웹 프론트엔드 개발을 담당했습니다.","avatar":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/picture.sample-3e801738dcd605383c72bc11af324106-af35e.png"}}]}},"title":"React, Google Maps, D3 를 이용한 Hexagonal Binning 기법","tags":"web","titleImage":{"childImageSharp":{"original":{"src":"/static/title-05db4266783ff1ad5b1a2c215223a007.png"}}}}}},"pageContext":{"slug":"/react-hexagonal-binning/"}}